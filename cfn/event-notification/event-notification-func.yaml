AWSTemplateFormatVersion: "2010-09-09"

Description: "event-notification-func.yaml"

Parameters:

  AppName:
    Description: "App name."
    Type: "String"
    Default: "gov-base"

  SecurityHubTeamsIncomingWebhookUrlDev:
    Description: ""
    Type: "String"

  LambdaS3Bucket:
    Description: "Lambda zip"
    Type: "String"

  LambdaS3Key:
    Description: "Lambda zip"
    Type: "String"

  # LambdaS3ObjectVersion:
  #   Description: "Lambda zip"
  #   Type: "String"

Resources: 

  SecurityAlartNotificatorFunc:
    Type: AWS::Lambda::Function
    DependsOn:
      - "SecurityAlartNotificatorFuncLogGroup"
    Properties:
      FunctionName: !Sub "${AppName}---event-notification"
      Description: "notify security alart from EventBridge."
      Runtime: nodejs16.x
      Role: !GetAtt SecurityAlartNotificatorFuncRole.Arn
      Handler: index.handler
      Environment:
        Variables:
          "GOV_BASE__SECURITY_HUB_TEAMS_INCOMING_WEBHOOK_URL_DEV" : !Ref SecurityHubTeamsIncomingWebhookUrlDev
      TracingConfig:
        Mode: Active
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key
        # S3ObjectVersion: !Ref LambdaS3ObjectVersion

  SecurityAlartNotificatorFuncLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AppName}---event-notification"
      RetentionInDays: 400

  SecurityAlartNotificatorFuncRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}---event-notification"
      Path: !Sub "/${AppName}/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"
      PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/gov-base---permissions-boundary-for-role"
